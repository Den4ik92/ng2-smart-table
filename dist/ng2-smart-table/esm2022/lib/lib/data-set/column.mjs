export class Column {
    constructor(id, settings, dataSet) {
        this.id = id;
        this.settings = settings;
        this.dataSet = dataSet;
        this.title = '';
        this.type = 'text';
        this.class = '';
        this.width = '';
        this.hide = false;
        this.isSortable = false;
        this.isEditable = true;
        this.isAddable = true;
        this.isFilterable = false;
        this.sortDirection = 'asc';
        this.defaultSortDirection = false;
        this.editor = false;
        this.filter = false;
        this.process(this.settings);
    }
    getCompareFunction() {
        return this.compareFunction;
    }
    getValuePrepareFunction() {
        return this.valuePrepareFunction;
    }
    getFilterFunction() {
        return this.filterFunction;
    }
    getConfig() {
        if (this.editor && (this.editor.type === 'checkbox' || this.editor.type === 'custom' || this.editor.type === 'list')) {
            return this.editor?.config;
        }
        return false;
    }
    getFilterType() {
        return this.filter && this.filter.type;
    }
    getFilterConfig() {
        if (this.filter && (this.filter.type === 'checkbox' || this.filter.type === 'custom' || this.filter.type === 'list')) {
            return this.filter?.config;
        }
        return false;
    }
    process(settings) {
        this.title = settings.title;
        this.class = settings.class || '';
        this.width = settings.width || '';
        this.hide = !!settings.hide;
        this.type = settings.type;
        if (settings?.editor) {
            this.editor = settings.editor;
        }
        if (settings?.filter) {
            this.filter = settings.filter;
        }
        if (settings.type === 'custom' && settings.renderComponent) {
            this.renderComponent = settings.renderComponent;
        }
        this.isFilterable = typeof settings.filter === 'undefined' ? true : !!settings['filter'];
        this.defaultSortDirection = settings?.sortDirection || false;
        this.isSortable = typeof settings.sort === 'undefined' ? true : settings.sort;
        this.isEditable = typeof settings.editable === 'undefined' ? true : settings.editable;
        this.isAddable = typeof settings.addable === 'undefined' ? true : settings.addable;
        this.sortDirection = this.prepareSortDirection();
        this.compareFunction = settings.compareFunction;
        this.valuePrepareFunction = settings.valuePrepareFunction;
        this.filterFunction = settings.filterFunction;
    }
    prepareSortDirection() {
        return this.defaultSortDirection === 'desc' ? 'desc' : 'asc';
    }
}
//# sourceMappingURL=data:application/json;base64,