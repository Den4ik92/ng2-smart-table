import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Grid } from '../../lib/grid';
import { LocalDataSource } from '../../lib/data-source/local/local.data-source';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "../cell/cell.component";
import * as i4 from "./cells/create-cancel.component";
import * as i5 from "./cells/edit-delete.component";
import * as i6 from "./cells/custom.component";
export class Ng2SmartTableTbodyComponent {
    constructor() {
        this.rowClassFunction = () => '';
        this.save = new EventEmitter();
        this.cancel = new EventEmitter();
        this.edit = new EventEmitter();
        this.editCancel = new EventEmitter();
        this.delete = new EventEmitter();
        this.custom = new EventEmitter();
        this.edited = new EventEmitter();
        this.userSelectRow = new EventEmitter();
        this.userClickedRow = new EventEmitter();
        this.editRowSelect = new EventEmitter();
        this.multipleSelectRow = new EventEmitter();
        this.isMultiSelectVisible = false;
        this.showActionColumnLeft = false;
        this.showActionColumnRight = false;
        this.mode = 'inline';
        this.editInputClass = '';
        this.isActionAdd = false;
        this.isActionEdit = false;
        this.isActionDelete = false;
        this.noDataMessage = false;
    }
    get tableColumnsCount() {
        const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;
        return this.grid.getColumns().length + actionColumns;
    }
    ngOnChanges() {
        this.isMultiSelectVisible = this.grid.isMultiSelectVisible();
        this.showActionColumnLeft = this.grid.showActionColumn('left');
        this.mode = this.grid.getSetting('mode', 'inline');
        this.editInputClass = this.grid.getSetting('edit.inputClass', '');
        this.showActionColumnRight = this.grid.showActionColumn('right');
        this.isActionAdd = this.grid.getSetting('actions.add', false);
        this.isActionEdit = this.grid.getSetting('actions.edit', false);
        this.isActionDelete = this.grid.getSetting('actions.delete', false);
        this.noDataMessage = this.grid.getSetting('noDataMessage');
    }
    getVisibleCells(cells) {
        return (cells || []).filter((cell) => !cell.getColumn().hide);
    }
    trackByIdOrIndex(index, item) {
        return item?.id || index;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Ng2SmartTableTbodyComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: Ng2SmartTableTbodyComponent, selector: "[ng2-st-tbody]", inputs: { grid: "grid", source: "source", deleteConfirm: "deleteConfirm", editConfirm: "editConfirm", rowClassFunction: "rowClassFunction" }, outputs: { save: "save", cancel: "cancel", edit: "edit", editCancel: "editCancel", delete: "delete", custom: "custom", edited: "edited", userSelectRow: "userSelectRow", userClickedRow: "userClickedRow", editRowSelect: "editRowSelect", multipleSelectRow: "multipleSelectRow" }, usesOnChanges: true, ngImport: i0, template: "<ng-container *ngIf=\"grid.getRows()?.length; noRows\">\n  <tr\n    *ngFor=\"let row of grid.getRows(); trackBy: trackByIdOrIndex\"\n    (click)=\"userClickedRow.emit(row)\"\n    class=\"ng2-smart-row\"\n    [className]=\"rowClassFunction(row)\"\n    [ngClass]=\"{ selected: row.isSelected }\"\n  >\n    <td\n      *ngIf=\"isMultiSelectVisible\"\n      class=\"ng2-smart-actions ng2-smart-action-multiple-select\"\n      (click)=\"$event.stopPropagation(); multipleSelectRow.emit(row)\"\n    >\n      <input\n        type=\"checkbox\"\n        [id]=\"'row-' + row.index + '_select-checkbox'\"\n        class=\"form-control\"\n        [ngModel]=\"row.isSelected\"\n      />\n    </td>\n    <td\n      *ngIf=\"!row.isInEditing && showActionColumnLeft\"\n      class=\"ng2-smart-actions\"\n      (click)=\"$event.stopPropagation()\"\n    >\n      <ng2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      ></ng2-st-tbody-custom>\n\n      <ng2-st-tbody-edit-delete\n        [grid]=\"grid\"\n        [deleteConfirm]=\"deleteConfirm\"\n        [editConfirm]=\"editConfirm\"\n        (edit)=\"edit.emit(row)\"\n        (delete)=\"delete.emit(row)\"\n        (editRowSelect)=\"editRowSelect.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      >\n      </ng2-st-tbody-edit-delete>\n    </td>\n    <td\n      *ngIf=\"row.isInEditing && showActionColumnLeft\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-create-cancel\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [editConfirm]=\"editConfirm\"\n        [editCancel]=\"editCancel\"\n      ></ng2-st-tbody-create-cancel>\n    </td>\n    <td\n      *ngFor=\"let cell of getVisibleCells(row.cells)\"\n      [ngClass]=\"cell.getColumnClass()\"\n    >\n      <ng2-smart-table-cell\n        [cell]=\"cell\"\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [isNew]=\"false\"\n        [mode]=\"mode\"\n        [editConfirm]=\"editConfirm\"\n        [inputClass]=\"editInputClass\"\n        [isInEditing]=\"row.isInEditing\"\n      >\n      </ng2-smart-table-cell>\n    </td>\n\n    <td\n      *ngIf=\"row.isInEditing && showActionColumnRight\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-create-cancel\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [editConfirm]=\"editConfirm\"\n      ></ng2-st-tbody-create-cancel>\n    </td>\n\n    <td\n      *ngIf=\"!row.isInEditing && showActionColumnRight\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      ></ng2-st-tbody-custom>\n\n      <ng2-st-tbody-edit-delete\n        [grid]=\"grid\"\n        [deleteConfirm]=\"deleteConfirm\"\n        [editConfirm]=\"editConfirm\"\n        [row]=\"row\"\n        [source]=\"source\"\n        (edit)=\"edit.emit(row)\"\n        (delete)=\"delete.emit(row)\"\n        (editRowSelect)=\"editRowSelect.emit($event)\"\n      >\n      </ng2-st-tbody-edit-delete>\n    </td>\n  </tr>\n</ng-container>\n\n<ng-template #noRows>\n  <tr>\n    <td [attr.colspan]=\"tableColumnsCount\">\n      {{ noDataMessage }}\n    </td>\n  </tr>\n</ng-template>\n", styles: [":host .ng2-smart-row.selected{background:#0000000d}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-edit-delete a:first-child,:host ::ng-deep ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.CellComponent, selector: "ng2-smart-table-cell", inputs: ["grid", "row", "editConfirm", "createConfirm", "isNew", "cell", "inputClass", "mode", "isInEditing"], outputs: ["edited"] }, { kind: "component", type: i4.TbodyCreateCancelComponent, selector: "ng2-st-tbody-create-cancel", inputs: ["grid", "row", "editConfirm", "editCancel"] }, { kind: "component", type: i5.TbodyEditDeleteComponent, selector: "ng2-st-tbody-edit-delete", inputs: ["grid", "row", "source", "deleteConfirm", "editConfirm"], outputs: ["edit", "delete", "editRowSelect"] }, { kind: "component", type: i6.TbodyCustomComponent, selector: "ng2-st-tbody-custom", inputs: ["grid", "row", "source"], outputs: ["custom"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Ng2SmartTableTbodyComponent, decorators: [{
            type: Component,
            args: [{ selector: '[ng2-st-tbody]', template: "<ng-container *ngIf=\"grid.getRows()?.length; noRows\">\n  <tr\n    *ngFor=\"let row of grid.getRows(); trackBy: trackByIdOrIndex\"\n    (click)=\"userClickedRow.emit(row)\"\n    class=\"ng2-smart-row\"\n    [className]=\"rowClassFunction(row)\"\n    [ngClass]=\"{ selected: row.isSelected }\"\n  >\n    <td\n      *ngIf=\"isMultiSelectVisible\"\n      class=\"ng2-smart-actions ng2-smart-action-multiple-select\"\n      (click)=\"$event.stopPropagation(); multipleSelectRow.emit(row)\"\n    >\n      <input\n        type=\"checkbox\"\n        [id]=\"'row-' + row.index + '_select-checkbox'\"\n        class=\"form-control\"\n        [ngModel]=\"row.isSelected\"\n      />\n    </td>\n    <td\n      *ngIf=\"!row.isInEditing && showActionColumnLeft\"\n      class=\"ng2-smart-actions\"\n      (click)=\"$event.stopPropagation()\"\n    >\n      <ng2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      ></ng2-st-tbody-custom>\n\n      <ng2-st-tbody-edit-delete\n        [grid]=\"grid\"\n        [deleteConfirm]=\"deleteConfirm\"\n        [editConfirm]=\"editConfirm\"\n        (edit)=\"edit.emit(row)\"\n        (delete)=\"delete.emit(row)\"\n        (editRowSelect)=\"editRowSelect.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      >\n      </ng2-st-tbody-edit-delete>\n    </td>\n    <td\n      *ngIf=\"row.isInEditing && showActionColumnLeft\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-create-cancel\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [editConfirm]=\"editConfirm\"\n        [editCancel]=\"editCancel\"\n      ></ng2-st-tbody-create-cancel>\n    </td>\n    <td\n      *ngFor=\"let cell of getVisibleCells(row.cells)\"\n      [ngClass]=\"cell.getColumnClass()\"\n    >\n      <ng2-smart-table-cell\n        [cell]=\"cell\"\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [isNew]=\"false\"\n        [mode]=\"mode\"\n        [editConfirm]=\"editConfirm\"\n        [inputClass]=\"editInputClass\"\n        [isInEditing]=\"row.isInEditing\"\n      >\n      </ng2-smart-table-cell>\n    </td>\n\n    <td\n      *ngIf=\"row.isInEditing && showActionColumnRight\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-create-cancel\n        [grid]=\"grid\"\n        [row]=\"row\"\n        [editConfirm]=\"editConfirm\"\n      ></ng2-st-tbody-create-cancel>\n    </td>\n\n    <td\n      *ngIf=\"!row.isInEditing && showActionColumnRight\"\n      class=\"ng2-smart-actions\"\n    >\n      <ng2-st-tbody-custom\n        [grid]=\"grid\"\n        (custom)=\"custom.emit($event)\"\n        [row]=\"row\"\n        [source]=\"source\"\n      ></ng2-st-tbody-custom>\n\n      <ng2-st-tbody-edit-delete\n        [grid]=\"grid\"\n        [deleteConfirm]=\"deleteConfirm\"\n        [editConfirm]=\"editConfirm\"\n        [row]=\"row\"\n        [source]=\"source\"\n        (edit)=\"edit.emit(row)\"\n        (delete)=\"delete.emit(row)\"\n        (editRowSelect)=\"editRowSelect.emit($event)\"\n      >\n      </ng2-st-tbody-edit-delete>\n    </td>\n  </tr>\n</ng-container>\n\n<ng-template #noRows>\n  <tr>\n    <td [attr.colspan]=\"tableColumnsCount\">\n      {{ noDataMessage }}\n    </td>\n  </tr>\n</ng-template>\n", styles: [":host .ng2-smart-row.selected{background:#0000000d}:host .ng2-smart-row .ng2-smart-actions.ng2-smart-action-multiple-select{text-align:center}:host ::ng-deep ng2-st-tbody-edit-delete a:first-child,:host ::ng-deep ng2-st-tbody-create-cancel a:first-child{margin-right:.25rem}\n"] }]
        }], propDecorators: { grid: [{
                type: Input
            }], source: [{
                type: Input
            }], deleteConfirm: [{
                type: Input
            }], editConfirm: [{
                type: Input
            }], rowClassFunction: [{
                type: Input
            }], save: [{
                type: Output
            }], cancel: [{
                type: Output
            }], edit: [{
                type: Output
            }], editCancel: [{
                type: Output
            }], delete: [{
                type: Output
            }], custom: [{
                type: Output
            }], edited: [{
                type: Output
            }], userSelectRow: [{
                type: Output
            }], userClickedRow: [{
                type: Output
            }], editRowSelect: [{
                type: Output
            }], multipleSelectRow: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,