export class Column {
    constructor(id, settings, dataSet) {
        this.id = id;
        this.settings = settings;
        this.dataSet = dataSet;
        this.title = '';
        this.type = 'text';
        this.class = '';
        this.width = '';
        this.hide = false;
        this.isSortable = false;
        this.isEditable = true;
        this.isAddable = true;
        this.isFilterable = false;
        this.sortDirection = 'asc';
        this.defaultSortDirection = false;
        this.editor = false;
        this.filter = false;
        this.process();
    }
    getCompareFunction() {
        return this.compareFunction;
    }
    getValuePrepareFunction() {
        return this.valuePrepareFunction;
    }
    getFilterFunction() {
        return this.filterFunction;
    }
    getConfig() {
        if (this.editor && (this.editor.type === 'checkbox' || this.editor.type === 'custom' || this.editor.type === 'list')) {
            return this.editor?.config;
        }
        return false;
    }
    getFilterType() {
        return this.filter && this.filter.type;
    }
    getFilterConfig() {
        if (this.filter && (this.filter.type === 'checkbox' || this.filter.type === 'custom' || this.filter.type === 'list')) {
            return this.filter?.config;
        }
        return false;
    }
    process() {
        this.title = this.settings.title;
        this.class = this.settings.class || '';
        this.width = this.settings.width || '';
        this.hide = !!this.settings.hide;
        this.type = this.settings.type;
        if (this.settings?.editor) {
            this.editor = this.settings.editor;
        }
        if (this.settings?.filter) {
            this.filter = this.settings.filter;
        }
        if (this.settings.type === 'custom' && this.settings.renderComponent) {
            this.renderComponent = this.settings.renderComponent;
        }
        this.isFilterable = typeof this.settings.filter === 'undefined' ? true : !!this.settings['filter'];
        this.defaultSortDirection = this.settings?.sortDirection || false;
        this.isSortable = typeof this.settings.sort === 'undefined' ? true : this.settings.sort;
        this.isEditable = typeof this.settings.editable === 'undefined' ? true : this.settings.editable;
        this.isAddable = typeof this.settings.addable === 'undefined' ? true : this.settings.addable;
        this.sortDirection = this.prepareSortDirection();
        this.compareFunction = this.settings.compareFunction;
        this.valuePrepareFunction = this.settings.valuePrepareFunction;
        this.filterFunction = this.settings.filterFunction;
    }
    prepareSortDirection() {
        return this.defaultSortDirection === 'desc' ? 'desc' : 'asc';
    }
}
//# sourceMappingURL=data:application/json;base64,